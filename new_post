#!/usr/bin/env perl
use v5.36;
use open ':std', ':encoding(UTF-8)';
use Sq -sig => 1;
use Getopt::Long::Descriptive;
use Path::Tiny;
use Time::localtime;
use Template;

# TODO: Correct handling with folders
# TODO: Create Updated Front-Matter from template

my ($opt, $usage) = describe_options(
    'Usage: %c %o',
    ['title|t=s', 'title of file to create', {required     => 1 }],
    ['tags=s',    'comma separated tags',    {default      => ""}],
    ['help|h',    'Print this message',      {shortcircuit => 1 }],
);
$usage->die if $opt->help;

# generate the filename (including path) that should be created
my ($file, $slug) = assign {
    my $time  = localtime();
    my $date  = sprintf "%04d-%02d-%02d",
        ($time->year + 1900),
        ($time->mon + 1),
        $time->mday;
    my $title = $opt->title;
    $title =~ s/\A\s+//;            # trim start
    $title =~ s/\s+\z//;            # trim end
    $title =~ s/[^a-zA-Z0-9\s]+//g; # remove anything not whitespace and alphanumeric
    $title =~ s/\s+/-/g;            # replace whitespaces with -
    $title = lc $title;             # title always lower-case
    my $name = sprintf "%s-%s.md", $date, $title;

    path(content => posts => $name), $title;
};

# Abort when destination file exists
die(sprintf("Error: file '%s' already exists. Use another title to fix.\n", $file))
    if $file->exists;

# generate the file content
my $output; {
    my $time = localtime();

    my $tt = Template->new(
        STRICT   => 1,
        ENCODING => 'utf8',
    );
    $tt->process(\*DATA, {
        TITLE => $opt->title,
        SLUG  => $slug,
        DATE  => sprintf("%04d-%02d-%02dT00:00:00",
            ($time->year + 1900),
            ($time->mon + 1),
            $time->mday
        ),
        TAGS => $opt->tags,
    }, \$output) || die $tt->error(), "\n";
}

# write template output to file
$file->spew_utf8([$output]);
printf "Created: '%s'\n", $file;

__DATA__
---
layout:  post
title:   "[% TITLE | html %]"
slug:    [% SLUG %]
date:    [% DATE %]
lastmod: [% DATE %]
tags:    [% IF TAGS.empty ~%] [] [%~ ELSE ~%] [ [%~ TAGS ~%] ] [%~ END %]
description:
---
